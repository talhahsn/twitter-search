{"ast":null,"code":"export function merge(...sets) {\n  if (sets.length > 1) {\n    sets[0] = sets[0].slice(0, -1);\n    const xl = sets.length - 1;\n\n    for (let x = 1; x < xl; ++x) {\n      sets[x] = sets[x].slice(1, -1);\n    }\n\n    sets[xl] = sets[xl].slice(1);\n    return sets.join('');\n  } else {\n    return sets[0];\n  }\n}\nexport function subexp(str) {\n  return \"(?:\" + str + \")\";\n}\nexport function typeOf(o) {\n  return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nexport function toUpperCase(str) {\n  return str.toUpperCase();\n}\nexport function toArray(obj) {\n  return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}","map":null,"metadata":{},"sourceType":"module"}