{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.DATE_OPTIONS = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      tweets: [],\n      recentSearches: [],\n      accessToken: '',\n      hashTags: {}\n    };\n\n    this.getAccessToken = async () => {\n      return axios('/api/accessToken/', {\n        method: 'GET'\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      const lastSearch = this.state.recentSearches.length ? this.state.recentSearches[this.state.recentSearches.length - 1] : '';\n\n      if (this.state.searchValue.trim() || lastSearch !== this.state.searchValue) {\n        this.state.recentSearches.push(this.state.searchValue);\n        this.fetchTweets(this.state.searchValue);\n      }\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchTweets = async searchInput => {\n      const options = {\n        url: \"api/tweets?accessToken=\".concat(this.state.accessToken, \"&q=\").concat(escape(searchInput)),\n        method: 'GET'\n      };\n\n      try {\n        const response = await axios(options);\n        const hashTags = this.getRankedHashTags(response.data.items);\n        this.setState({\n          tweets: response.data.items || [],\n          hashTags: hashTags,\n          isSearchPerformed: true\n        });\n      } catch (error) {\n        this.setState({\n          tweets: [],\n          isSearchPerformed: true,\n          searchValue: ''\n        });\n      }\n    };\n\n    this.getRankedHashTags = items => {\n      let hashtagsList;\n      items.map(item => {\n        if (item.entities.hashtags.length) {\n          item.entities.hashtags.forEach(tag => {\n            hashtagsList[tag.text] = hashtagsList[tag.text] ? hashtagsList[tag.text] + 1 : 1;\n          });\n        }\n      });\n      return hashtagsList;\n    };\n  }\n\n  async componentWillMount() {\n    const response = await this.getAccessToken();\n    this.setState({\n      accessToken: response.data.items\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Tweets Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Clear Search\")), this.state.tweets.length || this.state.isSearchPerformed ? React.createElement(\"div\", {\n      className: \"search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search Results\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.tweets.map((tweet, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, new Date().toLocaleDateString('en-US', this.DATE_OPTIONS)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, tweet.text, \">\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''))) : null, this.state.recentSearches.length ? React.createElement(\"div\", {\n      className: \"recent-search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Recent Searches\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.recentSearches.map((search, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, search)))) : null, this.state.hashTags ? React.createElement(\"div\", {\n      className: \"hashtag-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Ranked HashTags\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, Object.keys(this.state.hashTags).forEach((key, value) => React.createElement(\"li\", {\n      key: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, key + value)))) : null);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","axios","Search","DATE_OPTIONS","weekday","year","month","day","state","searchValue","isSearchPerformed","tweets","recentSearches","accessToken","hashTags","getAccessToken","method","onSearchChange","event","setState","target","value","search","lastSearch","length","trim","push","fetchTweets","clearSearch","searchInput","options","url","escape","response","getRankedHashTags","data","items","error","hashtagsList","map","item","entities","hashtags","forEach","tag","text","componentWillMount","render","tweet","index","Date","toLocaleDateString","Object","keys","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\n  state = {\n    searchValue: '',\n    isSearchPerformed: false,\n    tweets: [],\n    recentSearches: [],\n    accessToken: '',\n    hashTags: {}\n  };\n\n  async componentWillMount() {\n    const response = await this.getAccessToken();\n    this.setState({ accessToken: response.data.items })\n  }\n\n  getAccessToken = async () => {\n    return axios('/api/accessToken/', { method: 'GET' })\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchValue: event.target.value });\n  };\n\n  search = () => {\n    const lastSearch = this.state.recentSearches.length ? this.state.recentSearches[this.state.recentSearches.length - 1] : '';\n    if (this.state.searchValue.trim() || lastSearch !== this.state.searchValue) {\n      this.state.recentSearches.push(this.state.searchValue);\n      this.fetchTweets(this.state.searchValue);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  fetchTweets = async searchInput => {\n    const options = {\n      url: `api/tweets?accessToken=${this.state.accessToken}&q=${escape(searchInput)}`,\n      method: 'GET',\n    };\n\n    try {\n      const response = await axios(options);\n      const hashTags = this.getRankedHashTags(response.data.items);\n      this.setState({ tweets: response.data.items || [], hashTags: hashTags, isSearchPerformed: true });\n    } catch (error) {\n      this.setState({ tweets: [], isSearchPerformed: true, searchValue: '' });\n    }\n  };\n\n  getRankedHashTags = items => {\n    let hashtagsList;\n    items.map((item) => {\n      if (item.entities.hashtags.length) {\n        item.entities.hashtags.forEach(tag => {\n          hashtagsList[tag.text] = hashtagsList[tag.text] ? hashtagsList[tag.text] + 1 : 1;\n        });\n      }\n    });\n    return hashtagsList;\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Tweets Search App</h1>\n          <input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Enter something to search\"\n            onChange={event => this.onSearchChange(event)}\n            value={this.state.searchValue}\n          />\n          <button onClick={this.search}>Search</button>\n          <button onClick={this.clearSearch}>Clear Search</button>\n        </div>\n        {\n          this.state.tweets.length || this.state.isSearchPerformed ?\n            <div className=\"search-list\">\n              <h2>Search Results</h2>\n              <ul>\n                {this.state.tweets.map((tweet, index) => (\n                  <li key={index}>\n                    <h4>{(new Date()).toLocaleDateString('en-US', this.DATE_OPTIONS)}</h4>\n                    <span>{tweet.text}></span>\n                  </li>\n                ))}\n                <p>{this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n              </ul>\n            </div> : null\n        }\n        {\n          this.state.recentSearches.length ?\n            <div className=\"recent-search-list\">\n              <h2>Recent Searches</h2>\n              <ul>\n                {this.state.recentSearches.map((search, index) => (\n                  <li key={index}>{search}</li>\n                ))}\n              </ul>\n            </div> : null\n        }\n        {\n          this.state.hashTags ?\n            <div className=\"hashtag-list\">\n              <h2>Ranked HashTags</h2>\n              <ul>\n                {Object.keys(this.state.hashTags).forEach((key, value) => (\n                  <li key={value}>{key + value}</li>\n                ))}\n              </ul>\n            </div> : null\n        }\n      </div >\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}