{"ast":null,"code":"import { SCHEMES } from \"../uri\";\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/; //RFC 4122\n\nexport default {\n  scheme: \"urn:uuid\",\n  parse: function (components, options) {\n    if (!options.tolerant && (!components.path || !components.path.match(UUID))) {\n      components.error = components.error || \"UUID is not valid.\";\n    }\n\n    return components;\n  },\n  serialize: function (components, options) {\n    //ensure UUID is valid\n    if (!options.tolerant && (!components.path || !components.path.match(UUID))) {\n      //invalid UUIDs can not have this scheme\n      components.scheme = undefined;\n    } else {\n      //normalize UUID\n      components.path = (components.path || \"\").toLowerCase();\n    }\n\n    return SCHEMES[\"urn\"].serialize(components, options);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}