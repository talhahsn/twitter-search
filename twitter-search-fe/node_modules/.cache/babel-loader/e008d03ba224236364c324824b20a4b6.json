{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\nimport oauthSignature from 'oauth-signature';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.DATE_OPTIONS = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    this.searchAPI = 'https://api.twitter.com/1.1/search/tweets.json?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574875580&oauth_nonce=0yUGmC&oauth_version=1.0&oauth_signature=zsoJQYJh1c2Ck0KLiVxgXQTPYtE%3D&result_type=mixed&count=2';\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      tweets: []\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      this.fetchTweets(this.state.searchValue);\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchTweets = async searchInput => {\n      const options = {\n        url: \"/1.1/search/tweets.json?\".concat(this.getQueryParams(), \"&q=\").concat(escape(searchInput), \"&result_type=mixed&count=10\"),\n        method: 'GET',\n        headers: {\n          'cache-control': 'no-cache'\n        }\n      };\n      const response = await axios(options);\n      this.setState({\n        tweets: response.data.statuses || [],\n        isSearchPerformed: true\n      });\n    };\n\n    this.generateOauthSignature = () => {\n      var httpMethod = 'GET',\n          url = 'https://api.twitter.com/1.1/search/tweets.json',\n          parameters = {\n        oauth_consumer_key: process.env.REACT_APP_oauth_consumer_key,\n        oauth_token: process.env.REACT_APP_oauth_token,\n        oauth_nonce: process.env.REACT_APP_oauth_nonce,\n        oauth_timestamp: '1574878855',\n        oauth_signature_method: 'HMAC-SHA1',\n        oauth_version: '1.0'\n      },\n          consumerSecret = process.env.REACT_APP_consumer_secret,\n          tokenSecret = process.env.REACT_APP_token_secret,\n          // generates a RFC 3986 encoded, BASE64 encoded HMAC-SHA1 hash\n      encodedSignature = oauthSignature.generate(httpMethod, url, parameters, consumerSecret, tokenSecret, {\n        encodeSignature: true\n      });\n      return 'ss0%2FJowjs9Sfjc1LPLPGkCcdi%2Fs%3D';\n      return encodedSignature;\n    };\n\n    this.getQueryParams = () => {\n      const queryParams = ['oauth_consumer_key', 'oauth_token', 'oauth_signature_method', 'oauth_signature', 'oauth_timestamp', 'oauth_nonce', 'oauth_version'];\n      let queryParam = '';\n      queryParams.forEach((param, i) => {\n        queryParam += \"\".concat(i === 0 ? '' : '&').concat(param, \"=\").concat(process.env[\"REACT_APP_\".concat(param)]);\n      });\n      return queryParam; // + `&oauth_signature=${this.generateOauthSignature()}`;\n    };\n  }\n\n  // fetchMeals = async searchInput => {\n  //   const searchUrl = `${this.searchAPI}?s=${searchInput}`;\n  //   // fetch(searchUrl)\n  //   //   .then(response => {\n  //   //     return response.json();\n  //   //   })\n  //   //   .then(jsonData => {\n  //   //     this.setState({ meals: jsonData.meals || [], isSearchPerformed: true });\n  //   //   });\n  //   const res = await axios(searchUrl, { method: 'GET' });\n  //   this.setState({ meals: res.data.meals || [], isSearchPerformed: true })\n  // };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Tweets Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Clear Search\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.tweets.map((tweet, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, new Date().toLocaleDateString('en-US', this.DATE_OPTIONS)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, tweet.text, \">\")))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","axios","oauthSignature","Search","DATE_OPTIONS","weekday","year","month","day","searchAPI","state","searchValue","isSearchPerformed","tweets","onSearchChange","event","setState","target","value","search","fetchTweets","clearSearch","searchInput","options","url","getQueryParams","escape","method","headers","response","data","statuses","generateOauthSignature","httpMethod","parameters","oauth_consumer_key","process","env","REACT_APP_oauth_consumer_key","oauth_token","REACT_APP_oauth_token","oauth_nonce","REACT_APP_oauth_nonce","oauth_timestamp","oauth_signature_method","oauth_version","consumerSecret","REACT_APP_consumer_secret","tokenSecret","REACT_APP_token_secret","encodedSignature","generate","encodeSignature","queryParams","queryParam","forEach","param","i","render","map","tweet","index","Date","toLocaleDateString","text","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\nimport oauthSignature from 'oauth-signature';\n\nclass Search extends Component {\n  DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\n  // searchAPI = 'https://www.themealdb.com/api/json/v1/1/search.php';\n  searchAPI = 'https://api.twitter.com/1.1/search/tweets.json?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574875580&oauth_nonce=0yUGmC&oauth_version=1.0&oauth_signature=zsoJQYJh1c2Ck0KLiVxgXQTPYtE%3D&result_type=mixed&count=2';\n  state = {\n    searchValue: '',\n    isSearchPerformed: false,\n    tweets: []\n  };\n\n  onSearchChange = event => {\n    this.setState({ searchValue: event.target.value });\n  };\n\n  search = () => {\n    this.fetchTweets(this.state.searchValue);\n  };\n\n  clearSearch = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  fetchTweets = async searchInput => {\n    const options = {\n      url: `/1.1/search/tweets.json?${this.getQueryParams()}&q=${escape(searchInput)}&result_type=mixed&count=10`,\n      method: 'GET',\n      headers: { 'cache-control': 'no-cache' },\n    };\n\n    const response = await axios(options);\n    this.setState({ tweets: response.data.statuses || [], isSearchPerformed: true });\n  };\n\n  generateOauthSignature = () => {\n    var httpMethod = 'GET',\n      url = 'https://api.twitter.com/1.1/search/tweets.json',\n      parameters = {\n        oauth_consumer_key: process.env.REACT_APP_oauth_consumer_key,\n        oauth_token: process.env.REACT_APP_oauth_token,\n        oauth_nonce: process.env.REACT_APP_oauth_nonce,\n        oauth_timestamp: '1574878855',\n        oauth_signature_method: 'HMAC-SHA1',\n        oauth_version: '1.0'\n      },\n      consumerSecret = process.env.REACT_APP_consumer_secret,\n      tokenSecret = process.env.REACT_APP_token_secret,\n      // generates a RFC 3986 encoded, BASE64 encoded HMAC-SHA1 hash\n      encodedSignature = oauthSignature.generate(httpMethod, url, parameters, consumerSecret, tokenSecret, { encodeSignature: true })\n\n    return 'ss0%2FJowjs9Sfjc1LPLPGkCcdi%2Fs%3D'\n    return encodedSignature;\n  }\n\n  getQueryParams = () => {\n    const queryParams = [\n      'oauth_consumer_key',\n      'oauth_token',\n      'oauth_signature_method',\n      'oauth_signature',\n      'oauth_timestamp',\n      'oauth_nonce',\n      'oauth_version'\n    ];\n\n    let queryParam = '';\n    queryParams.forEach((param, i) => {\n      queryParam += `${i === 0 ? '' : '&'}${param}=${process.env[`REACT_APP_${param}`]}`\n    });\n\n    return queryParam; // + `&oauth_signature=${this.generateOauthSignature()}`;\n  }\n\n  // fetchMeals = async searchInput => {\n  //   const searchUrl = `${this.searchAPI}?s=${searchInput}`;\n  //   // fetch(searchUrl)\n  //   //   .then(response => {\n  //   //     return response.json();\n  //   //   })\n  //   //   .then(jsonData => {\n  //   //     this.setState({ meals: jsonData.meals || [], isSearchPerformed: true });\n  //   //   });\n\n  //   const res = await axios(searchUrl, { method: 'GET' });\n  //   this.setState({ meals: res.data.meals || [], isSearchPerformed: true })\n  // };\n\n  render() {\n    return (\n      <div>\n        <h1>Tweets Search App</h1>\n        <input\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Enter something to search\"\n          onChange={event => this.onSearchChange(event)}\n          value={this.state.searchValue}\n        />\n        <button onClick={this.search}>Search</button>\n        <button onClick={this.clearSearch}>Clear Search</button>\n        <div>\n          {this.state.tweets.map((tweet, index) => (\n            <div key={index}>\n              <h2>{(new Date()).toLocaleDateString('en-US', this.DATE_OPTIONS)}</h2>\n              <span>{tweet.text}></span>\n            </div>\n          ))}\n        </div>\n        <p>{this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n      </div>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}