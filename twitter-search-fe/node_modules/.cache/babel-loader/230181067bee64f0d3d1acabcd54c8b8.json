{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\nimport qs from 'query-string';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.searchAPI = 'https://api.twitter.com/1.1/search/tweets.json?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574875580&oauth_nonce=0yUGmC&oauth_version=1.0&oauth_signature=zsoJQYJh1c2Ck0KLiVxgXQTPYtE%3D&result_type=mixed&count=2';\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      meals: []\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      this.fetchTweets(this.state.searchValue);\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchTweets = async searchInput => {\n      // const searchUrl = `${this.searchAPI}&q=${searchInput}`;\n      // const res = await axios(searchUrl, { method: 'GET' });\n      const abc = await this.obtainAccessToken();\n      debugger;\n    };\n\n    this.fetchMeals = async searchInput => {\n      const searchUrl = \"\".concat(this.searchAPI, \"?s=\").concat(searchInput); // fetch(searchUrl)\n      //   .then(response => {\n      //     return response.json();\n      //   })\n      //   .then(jsonData => {\n      //     this.setState({ meals: jsonData.meals || [], isSearchPerformed: true });\n      //   });\n\n      const res = await axios(searchUrl, {\n        method: 'GET'\n      });\n      this.setState({\n        meals: res.data.meals || [],\n        isSearchPerformed: true\n      });\n    };\n  }\n\n  obtainAccessToken() {\n    const options = {\n      url: '/?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574877635&oauth_nonce=0vVGeo&oauth_version=1.0&oauth_signature=OjW6UwFtR7gF5x5FmVK48StElqM%3D&q=from%3Atwitterdev&result_type=mixed&count=2',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify({\n        grant_type: 'client_credentials'\n      })\n    };\n    return axios(options).then(res => res.data.access_token);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Meal Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Clear Search\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.meals.map((meal, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, meal.strMeal), React.createElement(\"img\", {\n      src: meal.strMealThumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.meals.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","axios","qs","Search","searchAPI","state","searchValue","isSearchPerformed","meals","onSearchChange","event","setState","target","value","search","fetchTweets","clearSearch","searchInput","abc","obtainAccessToken","fetchMeals","searchUrl","res","method","data","options","url","headers","stringify","grant_type","then","access_token","render","map","meal","index","strMeal","strMealThumb","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\nimport qs from 'query-string';\n\nclass Search extends Component {\n  // searchAPI = 'https://www.themealdb.com/api/json/v1/1/search.php';\n  searchAPI = 'https://api.twitter.com/1.1/search/tweets.json?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574875580&oauth_nonce=0yUGmC&oauth_version=1.0&oauth_signature=zsoJQYJh1c2Ck0KLiVxgXQTPYtE%3D&result_type=mixed&count=2';\n  state = {\n    searchValue: '',\n    isSearchPerformed: false,\n    meals: []\n  };\n\n  onSearchChange = event => {\n    this.setState({ searchValue: event.target.value });\n  };\n\n  search = () => {\n    this.fetchTweets(this.state.searchValue);\n  };\n\n  clearSearch = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  fetchTweets = async searchInput => {\n    // const searchUrl = `${this.searchAPI}&q=${searchInput}`;\n    // const res = await axios(searchUrl, { method: 'GET' });\n\n    const abc = await this.obtainAccessToken()\n\n    debugger;\n  };\n\n  obtainAccessToken() {\n    const options = {\n      url: '/?oauth_consumer_key=w2USKpLcIw6MEWJfXngli6f8T&oauth_token=179807117-5UDyBQwzTiuhX3v6qPpKmOzsqhZwzRLldtjrnWqS&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1574877635&oauth_nonce=0vVGeo&oauth_version=1.0&oauth_signature=OjW6UwFtR7gF5x5FmVK48StElqM%3D&q=from%3Atwitterdev&result_type=mixed&count=2',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify({\n        grant_type: 'client_credentials',\n      }),\n    };\n\n    return axios(options).then(res => res.data.access_token);\n  }\n\n  fetchMeals = async searchInput => {\n    const searchUrl = `${this.searchAPI}?s=${searchInput}`;\n    // fetch(searchUrl)\n    //   .then(response => {\n    //     return response.json();\n    //   })\n    //   .then(jsonData => {\n    //     this.setState({ meals: jsonData.meals || [], isSearchPerformed: true });\n    //   });\n\n    const res = await axios(searchUrl, { method: 'GET' });\n    this.setState({ meals: res.data.meals || [], isSearchPerformed: true })\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Meal Search App</h1>\n        <input\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Enter something to search\"\n          onChange={event => this.onSearchChange(event)}\n          value={this.state.searchValue}\n        />\n        <button onClick={this.search}>Search</button>\n        <button onClick={this.clearSearch}>Clear Search</button>\n        <div>\n          {this.state.meals.map((meal, index) => (\n            <div key={index}>\n              <h2>{meal.strMeal}</h2>\n              <img src={meal.strMealThumb} />\n            </div>\n          ))}\n        </div>\n        <p>{this.state.meals.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n      </div>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}