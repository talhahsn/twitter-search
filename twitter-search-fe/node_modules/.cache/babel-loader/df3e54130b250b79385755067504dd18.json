{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.DATE_OPTIONS = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      tweets: [],\n      recentSearches: [],\n      accessToken: ''\n    };\n\n    this.getAccessToken = async () => {\n      return axios('/api/accessToken/', {\n        method: 'GET'\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      if (this.state.searchValue.trim()) {\n        this.state.recentSearches.push(this.state.searchValue);\n        this.fetchTweets(this.state.searchValue);\n      }\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchTweets = async searchInput => {\n      const options = {\n        url: \"api/tweets?accessToken=\".concat(this.state.accessToken, \"&q=\").concat(escape(searchInput)),\n        method: 'GET'\n      };\n\n      try {\n        const response = await axios(options);\n        debugger;\n        this.setState({\n          tweets: response.data.statuses || [],\n          isSearchPerformed: true\n        });\n      } catch (error) {\n        this.setState({\n          tweets: [],\n          isSearchPerformed: true,\n          searchValue: ''\n        });\n      }\n    };\n\n    this.getQueryParams = () => {\n      const queryParams = ['oauth_consumer_key', 'oauth_token', 'oauth_signature_method', 'oauth_signature', 'oauth_timestamp', 'oauth_nonce', 'oauth_version'];\n      let queryParam = '';\n      queryParams.forEach((param, i) => {\n        queryParam += \"\".concat(i === 0 ? '' : '&').concat(param, \"=\").concat(process.env[\"REACT_APP_\".concat(param)]);\n      });\n      return queryParam;\n    };\n  }\n\n  async componentWillMount() {\n    const response = await this.getAccessToken();\n    this.setState({\n      accessToken: response.data.items\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Tweets Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Clear Search\")), this.state.tweets.length || this.state.isSearchPerformed ? React.createElement(\"div\", {\n      class: \"search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Search Results\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.tweets.map((tweet, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, new Date().toLocaleDateString('en-US', this.DATE_OPTIONS)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, tweet.text, \">\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''))) : null, this.state.recentSearches.length ? React.createElement(\"div\", {\n      class: \"recent-search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Recent Searches\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.recentSearches.map((search, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, search)))) : null);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","axios","Search","DATE_OPTIONS","weekday","year","month","day","state","searchValue","isSearchPerformed","tweets","recentSearches","accessToken","getAccessToken","method","onSearchChange","event","setState","target","value","search","trim","push","fetchTweets","clearSearch","searchInput","options","url","escape","response","data","statuses","error","getQueryParams","queryParams","queryParam","forEach","param","i","process","env","componentWillMount","items","render","length","map","tweet","index","Date","toLocaleDateString","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\n  state = {\n    searchValue: '',\n    isSearchPerformed: false,\n    tweets: [],\n    recentSearches: [],\n    accessToken: ''\n  };\n\n  async componentWillMount() {\n    const response = await this.getAccessToken();\n    this.setState({ accessToken: response.data.items })\n  }\n\n  getAccessToken = async () => {\n    return axios('/api/accessToken/', { method: 'GET' })\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchValue: event.target.value });\n  };\n\n  search = () => {\n    if (this.state.searchValue.trim()) {\n      this.state.recentSearches.push(this.state.searchValue);\n      this.fetchTweets(this.state.searchValue);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  fetchTweets = async searchInput => {\n    const options = {\n      url: `api/tweets?accessToken=${this.state.accessToken}&q=${escape(searchInput)}`,\n      method: 'GET',\n    };\n\n    try {\n      const response = await axios(options);\n      debugger;\n      this.setState({ tweets: response.data.statuses || [], isSearchPerformed: true });\n    } catch (error) {\n      this.setState({ tweets: [], isSearchPerformed: true, searchValue: '' });\n    }\n  };\n\n  getQueryParams = () => {\n    const queryParams = [\n      'oauth_consumer_key',\n      'oauth_token',\n      'oauth_signature_method',\n      'oauth_signature',\n      'oauth_timestamp',\n      'oauth_nonce',\n      'oauth_version'\n    ];\n\n    let queryParam = '';\n    queryParams.forEach((param, i) => {\n      queryParam += `${i === 0 ? '' : '&'}${param}=${process.env[`REACT_APP_${param}`]}`\n    });\n\n    return queryParam;\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Tweets Search App</h1>\n          <input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Enter something to search\"\n            onChange={event => this.onSearchChange(event)}\n            value={this.state.searchValue}\n          />\n          <button onClick={this.search}>Search</button>\n          <button onClick={this.clearSearch}>Clear Search</button>\n        </div>\n        {this.state.tweets.length || this.state.isSearchPerformed ?\n          <div class=\"search-list\">\n            <h2>Search Results</h2>\n            <ul>\n              {this.state.tweets.map((tweet, index) => (\n                <li key={index}>\n                  <h4>{(new Date()).toLocaleDateString('en-US', this.DATE_OPTIONS)}</h4>\n                  <span>{tweet.text}></span>\n                </li>\n              ))}\n              <p>{this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n            </ul>\n          </div> : null}\n        {this.state.recentSearches.length ?\n          <div class=\"recent-search-list\">\n            <h2>Recent Searches</h2>\n            <ul>\n              {this.state.recentSearches.map((search, index) => (\n                <li key={index}>{search}</li>\n              ))}\n            </ul>\n          </div> : null}\n      </div>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}