{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport './search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.searchAPI = 'https://www.themealdb.com/api/json/v1/1/search.php';\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      meals: []\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      this.fetchMeal(this.state.searchValue);\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchMeal = searchInput => {\n      const searchUrl = \"\".concat(this.searchAPI, \"?s=\").concat(searchInput);\n      fetch(searchUrl).then(response => {\n        return response.json();\n      }).then(jsonData => {\n        this.setState({\n          meals: jsonData.meals || [],\n          isSearchPerformed: true\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Meal Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Clear Search\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.meals.map((meal, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, meal.strMeal), React.createElement(\"img\", {\n      src: meal.strMealThumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.meals.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","Search","searchAPI","state","searchValue","isSearchPerformed","meals","onSearchChange","event","setState","target","value","search","fetchMeal","clearSearch","searchInput","searchUrl","fetch","then","response","json","jsonData","render","map","meal","index","strMeal","strMealThumb","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,SAD2B,GACf,oDADe;AAAA,SAE3BC,KAF2B,GAEnB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,iBAAiB,EAAE,KAFf;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAFmB;;AAAA,SAQ3BC,cAR2B,GAQVC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACH,KAV0B;;AAAA,SAY3BC,MAZ2B,GAYlB,MAAM;AACX,WAAKC,SAAL,CAAe,KAAKV,KAAL,CAAWC,WAA1B;AACH,KAd0B;;AAAA,SAgB3BU,WAhB2B,GAgBb,MAAM;AAChB,WAAKL,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAlB0B;;AAAA,SAoB3BS,SApB2B,GAoBfE,WAAW,IAAI;AACvB,YAAMC,SAAS,aAAM,KAAKd,SAAX,gBAA0Ba,WAA1B,CAAf;AACAE,MAAAA,KAAK,CAACD,SAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIUG,QAAQ,IAAI;AACd,aAAKZ,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAEe,QAAQ,CAACf,KAAT,IAAkB,EAA3B;AAA+BD,UAAAA,iBAAiB,EAAE;AAAlD,SAAd;AACH,OANL;AAOH,KA7B0B;AAAA;;AA+B3BiB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,2BAHhB;AAII,MAAA,QAAQ,EAAEd,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJvB;AAKI,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,EAUI;AAAQ,MAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWG,KAAX,CAAiBiB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAClB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,OAAV,CADJ,EAEI;AAAK,MAAA,GAAG,EAAEF,IAAI,CAACG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,CADL,CAXJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKxB,KAAL,CAAWG,KAAX,CAAiBsB,MAAjB,KAA4B,CAA5B,IAAiC,KAAKzB,KAAL,CAAWE,iBAAX,KAAiC,IAAlE,GAAyE,eAAzE,GAA2F,EAA/F,CAnBJ,CADJ;AAuBH;;AAvD0B;;AA0D/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './search.css';\n\nclass Search extends Component {\n    searchAPI = 'https://www.themealdb.com/api/json/v1/1/search.php';\n    state = {\n        searchValue: '',\n        isSearchPerformed: false,\n        meals: []\n    };\n\n    onSearchChange = event => {\n        this.setState({ searchValue: event.target.value });\n    };\n\n    search = () => {\n        this.fetchMeal(this.state.searchValue);\n    };\n\n    clearSearch = () => {\n        this.setState({ searchValue: '' });\n    };\n\n    fetchMeal = searchInput => {\n        const searchUrl = `${this.searchAPI}?s=${searchInput}`;\n        fetch(searchUrl)\n            .then(response => {\n                return response.json();\n            })\n            .then(jsonData => {\n                this.setState({ meals: jsonData.meals || [], isSearchPerformed: true });\n            });\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Meal Search App</h1>\n                <input\n                    name=\"text\"\n                    type=\"text\"\n                    placeholder=\"Enter something to search\"\n                    onChange={event => this.onSearchChange(event)}\n                    value={this.state.searchValue}\n                />\n                <button onClick={this.search}>Search</button>\n                <button onClick={this.clearSearch}>Clear Search</button>\n                <div>\n                    {this.state.meals.map((meal, index) => (\n                        <div key={index}>\n                            <h2>{meal.strMeal}</h2>\n                            <img src={meal.strMealThumb} />\n                        </div>\n                    ))}\n                </div>\n                <p>{this.state.meals.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n            </div>\n        );\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}