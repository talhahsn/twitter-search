{"ast":null,"code":"var _jsxFileName = \"/home/talha/Documents/Projects/twitter-search/src/search/search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.DATE_OPTIONS = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    this.state = {\n      searchValue: '',\n      isSearchPerformed: false,\n      tweets: [],\n      recentSearches: [],\n      accessToken: ''\n    };\n\n    this.getAccessToken = async () => {\n      return axios('/api/accessToken/', {\n        method: 'GET'\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.search = () => {\n      if (this.state.searchValue.trim()) {\n        this.state.recentSearches.push(this.state.searchValue);\n        this.fetchTweets(this.state.searchValue);\n      }\n    };\n\n    this.clearSearch = () => {\n      this.setState({\n        searchValue: ''\n      });\n    };\n\n    this.fetchTweets = async searchInput => {\n      const options = {\n        url: \"api/tweets?accessToken=\".concat(this.state.accessToken, \"&q=\").concat(escape(searchInput)),\n        method: 'GET'\n      };\n\n      try {\n        const response = await axios(options);\n        const hashtagsList = this.getRankedHashTags(response.data.items);\n        this.setState({\n          tweets: response.data.items || [],\n          isSearchPerformed: true\n        });\n      } catch (error) {\n        this.setState({\n          tweets: [],\n          isSearchPerformed: true,\n          searchValue: ''\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const response = await this.getAccessToken();\n    this.setState({\n      accessToken: response.data.items\n    });\n  }\n\n  getRankedHashTags(items) {\n    const hashtagsList = items.map(item => {\n      if (item.entities.hashtags.length > 0) {\n        return item.entities.hashtags;\n      }\n\n      console.log(hashtagsList); // items.map(item => {\n      //   if (item.entities)\n      // });\n    });\n    return [];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Tweets Search App\"), React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Enter something to search\",\n      onChange: event => this.onSearchChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"button\", {\n      onClick: this.clearSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Clear Search\")), this.state.tweets.length || this.state.isSearchPerformed ? React.createElement(\"div\", {\n      className: \"search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Search Results\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.tweets.map((tweet, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, new Date().toLocaleDateString('en-US', this.DATE_OPTIONS)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, tweet.text, \">\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''))) : null, this.state.recentSearches.length ? React.createElement(\"div\", {\n      className: \"recent-search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Recent Searches\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.recentSearches.map((search, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, search)))) : null);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/talha/Documents/Projects/twitter-search/src/search/search.js"],"names":["React","Component","axios","Search","DATE_OPTIONS","weekday","year","month","day","state","searchValue","isSearchPerformed","tweets","recentSearches","accessToken","getAccessToken","method","onSearchChange","event","setState","target","value","search","trim","push","fetchTweets","clearSearch","searchInput","options","url","escape","response","hashtagsList","getRankedHashTags","data","items","error","componentDidMount","map","item","entities","hashtags","length","console","log","render","tweet","index","Date","toLocaleDateString","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport './search.css';\n\nclass Search extends Component {\n  DATE_OPTIONS = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };\n  state = {\n    searchValue: '',\n    isSearchPerformed: false,\n    tweets: [],\n    recentSearches: [],\n    accessToken: ''\n  };\n\n  async componentDidMount() {\n    const response = await this.getAccessToken();\n    this.setState({ accessToken: response.data.items })\n  }\n\n  getAccessToken = async () => {\n    return axios('/api/accessToken/', { method: 'GET' })\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchValue: event.target.value });\n  };\n\n  search = () => {\n    if (this.state.searchValue.trim()) {\n      this.state.recentSearches.push(this.state.searchValue);\n      this.fetchTweets(this.state.searchValue);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  fetchTweets = async searchInput => {\n    const options = {\n      url: `api/tweets?accessToken=${this.state.accessToken}&q=${escape(searchInput)}`,\n      method: 'GET',\n    };\n\n    try {\n      const response = await axios(options);\n      const hashtagsList = this.getRankedHashTags(response.data.items);\n      this.setState({ tweets: response.data.items || [], isSearchPerformed: true });\n    } catch (error) {\n      this.setState({ tweets: [], isSearchPerformed: true, searchValue: '' });\n    }\n  };\n\n  getRankedHashTags(items) {\n    const hashtagsList = items.map((item) => {\n      if (item.entities.hashtags.length > 0) {\n        return item.entities.hashtags\n      }\n      console.log(hashtagsList);\n      // items.map(item => {\n      //   if (item.entities)\n      // });\n    });\n    return [];\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1>Tweets Search App</h1>\n          <input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Enter something to search\"\n            onChange={event => this.onSearchChange(event)}\n            value={this.state.searchValue}\n          />\n          <button onClick={this.search}>Search</button>\n          <button onClick={this.clearSearch}>Clear Search</button>\n        </div>\n        {\n          this.state.tweets.length || this.state.isSearchPerformed ?\n            <div className=\"search-list\">\n              <h2>Search Results</h2>\n              <ul>\n                {this.state.tweets.map((tweet, index) => (\n                  <li key={index}>\n                    <h4>{(new Date()).toLocaleDateString('en-US', this.DATE_OPTIONS)}</h4>\n                    <span>{tweet.text}></span>\n                  </li>\n                ))}\n                <p>{this.state.tweets.length === 0 && this.state.isSearchPerformed === true ? 'No data found' : ''}</p>\n              </ul>\n            </div> : null\n        }\n        {\n          this.state.recentSearches.length ?\n            <div className=\"recent-search-list\">\n              <h2>Recent Searches</h2>\n              <ul>\n                {this.state.recentSearches.map((search, index) => (\n                  <li key={index}>{search}</li>\n                ))}\n              </ul>\n            </div> : null\n        }\n      </div >\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}